What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository, a git folder is added, and version 
	control can start to take place. Its the first step before pushing your work to Git

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	 The staging area allows you to think on the changes you want to make to your repository before you make them. How you want to add the files and so on.
	 The value is that its kind of temp stage, nothing happens yet until you commit

How can you use the staging area to make sure you have one commit per logical
change?
	By adding a single file at a time or multiple files, we get to include a commit message when including the command git commit

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Branches can be helpful when creating new versions of your program,or trying new experiments on your program or remaking the entire thing.
	Branches will help save the old working version so that if mistakes are made in the new one, we still have a backup

How do the diagrams help you visualize the branch structure?
	They help us see the structure of the repository and all the changes made to each branch

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?